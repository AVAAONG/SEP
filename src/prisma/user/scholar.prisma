import { User } from "auth"
import { Region, ScholarCanAssist, ScholarStatus } from "..\types"
import { WorkshopAttendance } from "..\workshop"

model Scholar {
    id                           String               @id @default(nanoid(12))
    user                         User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
    region                       Region               @default(CARACAS)
    userId                       String               @unique
    firstNames                   String
    lastNames                    String
    dni                          String?              @unique
    gender                       String?
    birthDate                    DateTime?
    localPhoneNumber             String?
    cellPhoneNumber              String?
    whatsAppNumber               String?
    stateOfOrigin                String?
    currentZone                  String?
    email                        String?              @unique
    collage                      String?
    carrer                       String?
    studyArea                    String?
    currentAcademicPeriod        String?
    academicYear                 String?
    classModality                String?
    cvaLocation                  String?
    englishLevel                 String?
    notStartedCvaRreason         String?
    avaaAdmissionYear            String?
    volunteeringOrganizationName String?
    academicLoadCompleted        Boolean?
    currentStatus                String?
    ceremonyDate                 DateTime?
    isCurrentlyWorking           Boolean?
    organizationName             String?
    positionHeld                 String?
    workModality                 String?
    WorkshopAttendance           WorkshopAttendance[]
    scholarStatus                ScholarStatus        @default(CURRENT)
    canAssistToChats             ScholarCanAssist     @default(Yes)
    canAssistToWorkshops         ScholarCanAssist     @default(Yes)
    canAssistToVolunteers        ScholarCanAssist     @default(Yes)
}
