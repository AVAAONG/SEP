/// Prisma schema model for `Workshop` table in database.
/// Here we model all the necesary data and information wee need for the Workshop activities, and related tables (tempData, attendance, speaker)
/// @author Kevin Bravo (kevinbravo.me)

import { AvaaYear } from "..\..\types"
import { ActivityStatus, Modality } from "..\type-activities"
import { ScholarAttendance } from "..\type-activities"
import { Scholar } from "..\..\users\scholar\scholar"
import { Skill, WorkshopYear} from "types-workshop"
import { Gender } from "..\type-activities"
import { User } from "..\..\schema"

model Workshop {
    id                 String               @id @default(nanoid())
    title              String
    avalible_spots     Int
    platform           String
    description        String
    calendar_id        String?
    start_dates        DateTime[]
    end_dates          DateTime[]
    year               WorkshopYear[]
    modality           Modality
    skill              Skill
    speaker            WorkshopSpeaker[]
    temp_data          WorkshopTempData?
    activity_status    ActivityStatus
    scholar_attendance WorkshopAttendance[]
    rating             Float?

    @@index([title, modality, activity_status, skill])
}

model WorkshopTempData {
    id               String   @id @default(nanoid())
    workshop         Workshop @relation(fields: [workshop_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    workshop_id      String   @unique
    form_link        String
    meeting_link     String?
    meeting_id       String?
    meeting_password String?
}

model WorkshopSpeaker {
    id             String     @id @default(nanoid())
    first_names    String
    last_names     String
    email          String?  
    birthdate      DateTime?
    years_of_exp   Int?
    job_title      String?
    job_company    String?
    actual_city    String?
    actual_country String?
    image          String?
    description    String?
    instagram_user String?
    twitter_user   String?
    linkedin_user  String?
    facebook_user  String?
    phone_number   String?
    curriculum     String?
    gender         Gender?
    workshops      Workshop[]
}

model WorkshopAttendance {
    id            String            @id @default(nanoid())
    scholar       User           @relation(fields: [scholar_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    scholar_id    String
    workshop_id   String            @unique
    workshop      Workshop          @relation(fields: [workshop_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    attendance    ScholarAttendance
    justification String?

    @@index([scholar_id])
    @@index([workshop_id])
}
