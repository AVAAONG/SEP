import { Pensum, Modality, ActivityStatus} from "types"

model Workshop {
    id                 String               @id @default(nanoid(8))
    title              String
    pensum             Pensum
    dates              WorkshopDates[]
    speaker            WorkshopSpeaker[]
    spots              Int
    takenSpots         Int                  @default(0)
    modality           Modality
    platform           String
    description        String               @db.LongText
    avaaYear           String
    activityStatus     ActivityStatus       @default(AGENDADO)
    scholars           Scholar[]            @relation("ScholarWorkshop")
    tempData           WorkshopTempData?
    WorkshopAttendance WorkshopAttendance[]

    @@index([title, modality, activityStatus, pensum])
}

model WorkshopTempData {
    id              String   @id @default(nanoid(8))
    workshop        Workshop @relation(fields: [workshopId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    workshopId      String   @unique
    formLink        String
    meetingLink     String?
    meetingId       String?
    meetingPassword String?
    calendarID      String
}

model WorkshopDates {
    id         String   @id @default(nanoid(8))
    start_date DateTime
    end_date   DateTime
    workshop   Workshop @relation(fields: [workshopId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    workshopId String

    @@index([workshopId])
}

model WorkshopSpeaker {
    id            String     @id @default(nanoid(8))
    name          String     @unique
    email         String?    @unique
    age           Int?
    image         String?
    description   String?
    instagramUser String?
    twitterUser   String?
    linkedinUser  String?
    phoneNumber   String?
    workshops     Workshop[]
}

model WorkshopAttendance {
  id         String            @id @default(nanoid(8))
  scholar    Scholar?          @relation(fields: [scholarId], references: [id])
  scholarId  String?
  workshop   Workshop?         @relation(fields: [workshopId], references: [id])
  workshopId String?
  attend     ScholarAttendance
}