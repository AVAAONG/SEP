import { Modality, Pensum, ActivityStatus, ScholarAttendance} from "./types"

enum AvaaYear {
    I
    II
    III
    IV
    V
    V0
    TODOS
}

model Workshop {
    id                String               @id @default(nanoid(8))
    title             String
    spots             Int
    platform          String
    description       String               @db.LongText
    calendarID        String
    workshopYear      AvaaYear[]
    modality          Modality
    pensum            Pensum
    dates             WorkshopDates[]
    speaker           WorkshopSpeaker[]
    tempData          WorkshopTempData?
    activityStatus    ActivityStatus       @default(AGENDADO)
    scholarAttendance WorkshopAttendance[]

    @@index([title, modality, activityStatus, pensum])
}

model WorkshopTempData {
    id              String   @id @default(nanoid(8))
    workshop        Workshop @relation(fields: [workshopId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    workshopId      String   @unique
    formLink        String
    meetingLink     String?
    meetingId       String?
    meetingPassword String?
}

model WorkshopDates {
    id         String   @id @default(nanoid(8))
    start_date DateTime
    end_date   DateTime
    workshop   Workshop @relation(fields: [workshopId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    workshopId String

    @@index([workshopId])
}

model WorkshopSpeaker {
    id            String     @id @default(nanoid(8))
    name          String     @unique
    email         String?    @unique
    age           Int?
    image         String?
    description   String?
    instagramUser String?
    twitterUser   String?
    linkedinUser  String?
    phoneNumber   String?
    workshops     Workshop[]
}

model WorkshopAttendance {
    scholar       Scholar           @relation(fields: [scholarId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    scholarId     String
    workshop      Workshop          @relation(fields: [workshopId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    workshopId    String
    attendance    ScholarAttendance
    justification String?           @db.LongText

    @@index([scholarId, workshopId])
}
