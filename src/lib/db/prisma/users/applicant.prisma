import { User } from "..\base-next-auth"
import { Gender } from "..\activities\type-activities"
import { RecruitmentStatus } from "scholar\types-scholar"
import { Modality } from "..\activities\type-activities"
import { JobSchedule } from "scholar\types-scholar"

model Applicant {
  id          String            @id @default(cuid())
  user        User?
  step        Int               @default(1) //the sections in the form max 9
  chapterId   String
  personal    PersonalInfo?
  status      RecruitmentStatus @default(PHASE_I)
  startTime   DateTime          @default(now())
  endTime     DateTime?
  ContactInfo ContactInfo?
  familyInfo  FamilyInfo?
  jobInfo     JobInfo?
}

model PersonalInfo {
  id          String    @id @default(uuid())
  photo       String
  firstNames  String    @map("first_names")
  lastNames   String    @map("last_names")
  dni         String    @unique
  gender      Gender
  birthdate   DateTime
  state       String
  address     String
  Applicant   Applicant @relation(fields: [applicantId], references: [id])
  applicantId String    @unique

  @@map("personal_info")
}

model ContactInfo {
  id                  String    @id @default(uuid())
  localPhoneNumber    String    @map("local_phone_number")
  whatsAppPhoneNumber String    @map("whatsApp_phone_number")
  email               String    @unique
  parentalPhoneNumber String    @map("parental_phone_number")
  parental            String
  Applicant           Applicant @relation(fields: [applicantId], references: [id])
  applicantId         String    @unique

  @@map("contact_info")
}

model FamilyInfo {
  id                       String           @id @default(uuid()) @map("id")
  averageFamilyIncome      Float            @map("average_family_income")
  whitWhoDoYouLive         WhitWhoDoYouLive @map("whit_who_do_you_live")
  kindOfHouse              KindOfHouse      @map("kind_of_house")
  contributeToFamilyIncome Boolean          @map("contribute_to_family_income")
  familyMembers            String           @map("family_members")
  fatherJob                String?          @map("father_job")
  fathersCompanyName       String?          @map("fathers_company_name")
  motherJob                String?          @map("mother_job")
  mothersCompanyName       String?          @map("mothers_company_name")
  applicant                Applicant        @relation(fields: [applicantId], references: [id])
  applicantId              String           @unique

  @@map("family_info")
}

enum WhitWhoDoYouLive {
  PARENTS
  RELATIVES
  OTHERS
}

enum KindOfHouse {
  OWNED
  RENTED
  MORTGAGED
}

model JobInfo {
  id               String       @id @default(uuid())
  currentlyWorking Boolean      @map("currently_working")
  jobCompany       String?      @map("job_company")
  jobTitle         String?      @map("job_title")
  jobModality      Modality?    @map("job_modality")
  jobSchedule      JobSchedule? @map("job_schedule")
  applicant        Applicant    @relation(fields: [applicantId], references: [id])
  applicantId      String       @unique

  @@map("job_info")
}
