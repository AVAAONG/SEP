import { User } from "..\base-next-auth"
import { Gender } from "..\activities\type-activities"
import { RecruitmentStatus } from "scholar\types-scholar"
import { Modality } from "..\activities\type-activities"
import { JobSchedule } from "scholar\types-scholar"
import { Level } from "..\activities\chat\types-chat"

model Applicant {
  id                String             @id @default(cuid())
  user              User?
  step              Int                @default(1) //the sections in the form max 9
  chapterId         String
  personal          PersonalInfo?
  status            RecruitmentStatus  @default(PHASE_I)
  startTime         DateTime           @default(now())
  endTime           DateTime?
  ContactInfo       ContactInfo?
  familyInfo        FamilyInfo?
  jobInfo           JobInfo?
  languageKnowledge LanguageKnowledge?
  highSchool        HighSchool?
  additionalInfo    AdditionalInfo?
}

model PersonalInfo {
  id          String    @id @default(uuid())
  photo       String
  firstNames  String    @map("first_names")
  lastNames   String    @map("last_names")
  dni         String    @unique
  gender      Gender
  birthdate   DateTime
  state       String
  address     String
  Applicant   Applicant @relation(fields: [applicantId], references: [id])
  applicantId String    @unique

  @@map("personal_info")
}

model ContactInfo {
  id                  String    @id @default(uuid())
  localPhoneNumber    String    @map("local_phone_number")
  whatsAppPhoneNumber String    @map("whatsApp_phone_number")
  email               String    @unique
  parentalPhoneNumber String    @map("parental_phone_number")
  parental            String
  Applicant           Applicant @relation(fields: [applicantId], references: [id])
  applicantId         String    @unique

  @@map("contact_info")
}

model FamilyInfo {
  id                       String           @id @default(uuid()) @map("id")
  averageFamilyIncome      Float            @map("average_family_income")
  whitWhoDoYouLive         WhitWhoDoYouLive @map("whit_who_do_you_live")
  kindOfHouse              KindOfHouse      @map("kind_of_house")
  contributeToFamilyIncome Boolean          @map("contribute_to_family_income")
  familyMembers            String           @map("family_members")
  fatherJob                String?          @map("father_job")
  fathersCompanyName       String?          @map("fathers_company_name")
  motherJob                String?          @map("mother_job")
  mothersCompanyName       String?          @map("mothers_company_name")
  applicant                Applicant        @relation(fields: [applicantId], references: [id])
  applicantId              String           @unique

  @@map("family_info")
}

enum WhitWhoDoYouLive {
  PARENTS
  RELATIVES
  OTHERS
}

enum KindOfHouse {
  OWNED
  RENTED
  MORTGAGED
}

model JobInfo {
  id               String       @id @default(uuid())
  currentlyWorking Boolean      @map("currently_working")
  jobCompany       String?      @map("job_company")
  jobTitle         String?      @map("job_title")
  jobModality      Modality?    @map("job_modality")
  jobSchedule      JobSchedule? @map("job_schedule")
  applicant        Applicant    @relation(fields: [applicantId], references: [id])
  applicantId      String       @unique

  @@map("job_info")
}

model LanguageKnowledge {
  id                  String    @id @default(uuid())
  speaksOtherLanguage Boolean   @map("speaks_other_language")
  specifiedLanguage   String?   @map("specified_language")
  languageLevel       Level?    @map("language_level")
  applicant           Applicant @relation(fields: [applicantId], references: [id])
  applicantId         String    @unique

  @@map("language_knowledge")
}

model HighSchool {
  id                        String                @id @default(uuid())
  institutionName           String                @map("institution_name")
  institutionDependency     InstitutionDependency @map("institution_dependency")
  gpa                       Float
  graduationTitle           GraduationTitle       @map("graduation_title")
  mention                   String?
  extracurricularActivities String?               @map("extracurricular_activities")
  applicant                 Applicant             @relation(fields: [applicantId], references: [id])
  applicantId               String                @unique

  @@map("high_school")
}

enum InstitutionDependency {
  PUBLIC
  PRIVATE
  SUBSIDY
}

enum GraduationTitle {
  BACHELOR_IN_SCIENCE
  MEDIAN_TECHNICIAN
}

model AdditionalInfo {
  id                           String                       @id @default(uuid())
  hasInternetConnection        Boolean                      @map("has_internet_connection")
  internetConnectionStability  InternetConnectionStability? @map("internet_connection_stability")
  programDiscoverySource       ProgramDiscoverySource       @map("program_discovery_source")
  isReferredByScholar          Boolean                      @map("is_referred_by_scholar")
  referredScholarName          String?                      @map("referred_scholar_name")
  scholarshipApplicationReason String                       @map("scholarship_application_reason")
  applicant                    Applicant                    @relation(fields: [applicantId], references: [id])
  applicantId                  String                       @unique @map("applicant_id")

  @@map("additional_info")
}

enum ProgramDiscoverySource {
  FRIEND_RELATIVE
  MEDIA
  AVAA_WEBSITE
  INSTAGRAM
  LINKEDIN
  TWITTER
  YOUTUBE
  INTERNET_SEARCH
}

enum InternetConnectionStability {
  VERY_STABLE
  STABLE
  UNSTABLE
  VERY_UNSTABLE
  NONE
}
