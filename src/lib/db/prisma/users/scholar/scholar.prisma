/// Prisma schema model for `Scholar` table in database.
/// Here we model all the necessary data and information we need for the scholars.
/// @author Kevin Bravo (kevinbravo.me)

import { WorkshopAttendance } from "..\..\activities\workshop\workshop"
import { ChatAttendance } from "..\..\activities\chat\chat"
import { Chapter } from "..\..\organization\chapter"
import { Gender } from "..\..\activities\type-activities"
import { ScholarCollageInformation } from "collage"
import { ScholarCVAInformation } from "cva"
import { ScholarCondition,Region, ScholarStatus  } from "types-scholar"
import { User } from "..\..\base-next-auth"
import { Chat, Chat, Chat } from "..\..\activities\chat\chat"
import { VolunteerAttendance } from "..\..\activities\volunteer\volunteer"
import { Modality } from "..\..\activities\type-activities"
import { Level, Scholar } from "..\..\schema"
import { JobSchedule, KindOfJob, RecruitmentStatus } from "types-scholar"
import { MentorMentee } from "..\..\mentors"

enum JobSector {
    PRIVATE
    PUBLIC
}

model Scholar {
    id                                String                      @id @default(nanoid())
    photo                             String?
    first_names                       String
    last_names                        String
    dni                               String                      @unique
    gender                            Gender
    birthdate                         DateTime?
    local_phone_number                String?
    cell_phone_Number                 String?
    whatsapp_number                   String?
    email                             String?                     @unique
    country                           String?
    state                             String?
    city                              String?
    address                           String?
    instagram_user                    String?
    twitter_user                      String?
    facebook_user                     String?
    linkedin_user                     String?
    tiktok_user                       String?
    youtube_user                      String?
    user                              User?
    program_information               ScholarProgramInformation?
    collage_information               ScholarCollageInformation[]
    cva_information                   ScholarCVAInformation?
    job_information                   JobInformation[]
    recruitment_information           RecruitmentInformation?
    entrepenourshipInformation        EntrepenourshipInformation?
    dos_exchange_program_applications DOSExchangeProgram[]
}

model ScholarProgramInformation {
    id                       String                @id @default(nanoid())
    program_admission_date   DateTime
    program_end_date         DateTime?
    is_chat_speaker          Boolean               @default(false)
    scholar_status           ScholarStatus         @default(NORMAL)
    scholar_condition        ScholarCondition?     @default(ACTIVE)
    quitted_chats_count      Int                   @default(0)
    quitted_volunteers_count Int                   @default(0)
    quitted_workshops_count  Int                   @default(0)
    probation                Probation[]
    volunteerAttendance      VolunteerAttendance[]
    attended_workshops       WorkshopAttendance[]
    attended_chats           ChatAttendance[]
    mentor_relation          MentorMentee[]
    scholar                  Scholar               @relation(fields: [scholarId], references: [id])
    chapter                  Chapter?              @relation(fields: [chapter_id], references: [id])
    chapter_id               String?
    scholarId                String                @unique

    @@index([chapter_id])
}

model Probation {
    id                 String                    @id @default(nanoid())
    kind_of_probation  ScholarStatus
    starting_date      DateTime
    ending_date        DateTime?
    done_at_the_moment Json
    probation_reason   String?
    agreement          Json
    next_meeting       DateTime
    observations       String?
    scholar            ScholarProgramInformation @relation(fields: [scholar_id], references: [id])
    scholar_id         String

    @@index([scholar_id])
}

model RecruitmentInformation {
    id                            String            @id @default(nanoid())
    infomation_fill               DateTime
    information_update            DateTime
    recruitmentStatus             RecruitmentStatus
    contribute_to_family_income   Boolean           @default(false)
    average_family_income         String?
    whit_who_do_you_live          String?
    kind_of_house                 String?
    family_members                String?
    father_job                    String?
    fathers_company_name          String?
    fathers_yearsof_experience    String?
    mother_job                    String?
    mothers_company_name          String?
    mothers_yearsof_experience    String?
    parent_phone_number           String?
    parent_name                   String?
    high_school_name              String?
    high_school_address           String?
    high_school_title             String?
    high_school_director_name     String?
    high_school_average_grade     String?
    high_school_grade_proof       String?
    extracurricular_activities    String?
    social_labour_place           String?
    social_labour_learning        String?
    speaked_other_languages       Boolean?
    speaked_languages             String?
    how_knows_program             String?
    internet_connection           Boolean           @default(false)
    internet_connection_stability String?
    why_wants_to_be_scholar       String?
    dni_scan                      String?
    rif_scan                      String?
    cnu_opsu_scan                 String?
    esay                          String?
    last_tax_declaration          String?
    receipt_of_payment            String?
    speaked_languages_level       Level?
    referred_by                   String?
    scholar_id                    String            @unique
    scholar                       Scholar           @relation(fields: [scholar_id], references: [id])

    @@index([scholar_id])
}

model AlumniSatisfactionForm {
    id                                      String    @id @default(nanoid())
    do_interships                           Boolean   @default(true)
    company                                 String?
    company_sector                          JobSector
    intership_start_date                    DateTime
    intership_end_date                      DateTime
    stipend_satisfaction                    Float
    intership_comments                      String
    intership_specialty                     String
    english_chats                           Float
    workshops                               Float
    Volunteer                               Float
    Mentorship                              Float
    intership__and_job_placement            Float
    comments_about_program_component        String
    skills_developed_during_the_program     String
    values_developed_during_the_program     String
    program_suggestions                     String
    program_support                         String
    how_would_like_to_participate_as_alumni String
    future_activities                       String
}

model JobInformation {
    id                                  String      @id @default(nanoid())
    job_title                           String
    job_company                         String
    job_modality                        Modality
    job_schedule                        JobSchedule
    kind_of_job                         KindOfJob
    job_sector                          JobSector
    aspects_that_influenced_getting_job String?
    job_start_date                      DateTime
    job_end_date                        DateTime?
    laboral_conditions                  String?
    actions_to_get_job                  String?
    why_didnt_get_job                   String?
    scholar                             Scholar     @relation(fields: [scholar_id], references: [id])
    scholar_id                          String      @unique
}

model EntrepenourshipInformation {
    id                            String    @id @default(nanoid())
    have_entrepreneurship         Boolean   @default(false)
    entrepreneurship_name         String?
    entrepreneurship_kind         String?
    entrepreneurship_services     String?
    entrepreneurship_social_media String?
    motivations_to_be_entrepeneur String?
    proexcelencia_motivates_it    String?
    entrepreneurship_start_date   DateTime?
    scholar                       Scholar   @relation(fields: [scholarId], references: [id])
    scholarId                     String    @unique
}

model DOSExchangeProgram {
    id                    String   @id @default(nanoid())
    name                  String
    aplication_date       DateTime
    reached_stage         String
    selected              Boolean
    usa_state             String?
    usa_university        String?
    program_duration      String?
    usa_contact           String?
    currently_working_org String?
    usa_connection        String?
    scholar               Scholar? @relation(fields: [scholar_id], references: [id])
    scholar_id            String?
}
