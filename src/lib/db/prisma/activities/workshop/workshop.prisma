/// Prisma schema model for `Workshop` table in database.
/// Here we model all the necesary data and information wee need for the Workshop activities, and related tables (tempData, attendance, speaker)
/// @author Kevin Bravo (kevinbravo.me)

import { AvaaYear } from "..\..\types"
import { ActivityStatus, Modality } from "..\type-activities"
import { ScholarAttendance } from "..\type-activities"
import { Skill, WorkshopYear} from "types-workshop"
import { Gender } from "..\type-activities"
import { ScholarProgramInformation } from "..\..\users\scholar\scholar"
import { Speaker } from "..\speaker"

// This model is used to store the data of the workshop
model Workshop {
    id                 String               @id @default(nanoid())
    title              String
    avalible_spots     Int
    platform           String
    description        String?
    kindOfWorkshop     String // Aun no esta completamente definido cuales seran los tipos de actividad formativa que se van a realizar, por lo cual se dejo como string para que se pueda cambiar facilmente
    calendar_ids       String[]
    start_dates        DateTime[]
    end_dates          DateTime[]
    year               WorkshopYear[]
    modality           Modality
    asociated_skill    Skill
    activity_status    ActivityStatus
    scholar_attendance WorkshopAttendance[]
    speaker            Speaker[]
    slides             String?
    meeting_link       String[]
    meeting_id         String[]
    meeting_password   String[]

    @@index([title, modality, activity_status, asociated_skill])
}

//  Intermediate table to store the attendance of the scholars to the workshops
model WorkshopAttendance {
    id                             String                    @id @default(nanoid())
    scholar                        ScholarProgramInformation @relation(fields: [program_information_scholar_id], references: [id])
    program_information_scholar_id String
    workshop_id                    String
    workshop                       Workshop                  @relation(fields: [workshop_id], references: [id])
    attendance                     ScholarAttendance
    justification                  String?
    satisfaction_form_filled       Boolean?
    satisfaction_form              WorkshopSafisfactionForm?

    @@index([program_information_scholar_id])
    @@index([workshop_id])
}

model WorkshopSafisfactionForm {
    id                                    String             @id @default(nanoid())
    activity_organization                 Int
    activity_number_of_participants       Int
    activity_lenght                       Int
    activity_relevance_for_scholar        Int
    speaker_theory_practice_mix           Int
    speaker_knowledge_of_activity         Int
    speaker_foment_scholar_to_participate Int
    speaker_knowledge_transmition         Int
    content_match_necesities              Int
    content_knowledge_adquisition         Int
    content_knowledge_expansion           Int
    content_personal_development          Int
    general_satisfaction                  Int
    workshop_attendance                   WorkshopAttendance @relation(fields: [workshop_attendance_id], references: [id])
    workshop_attendance_id                String             @unique
}
