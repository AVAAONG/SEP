/// Prisma schema model for `Workshop` table in database.
/// Here we model all the necesary data and information wee need for the Workshop activities, and related tables (tempData, attendance, speaker)
/// @author Kevin Bravo (kevinbravo.me)

import { AvaaYear } from "..\..\types"
import { ActivityStatus, Modality } from "..\type-activities"
import { ScholarAttendance } from "..\type-activities"
import { Skill, WorkshopYear} from "types-workshop"
import { Gender } from "..\type-activities"
import { ScholarProgramInformation } from "..\..\users\scholar\scholar"
import { Speaker } from "..\speaker"

// This model is used to store the data of the workshop
model Workshop {
    id                 String               @id @default(nanoid())
    title              String
    avalible_spots     Int
    platform           String
    description        String?
    kindOfWorkshop     String // Aun no esta completamente definido cuales seran los tipos de actividad formativa que se van a realizar, por lo cual se dejo como string para que se pueda cambiar facilmente
    calendar_ids       String[]
    start_dates        DateTime[]
    end_dates          DateTime[]
    year               WorkshopYear[]
    modality           Modality
    asociated_skill    Skill
    temp_data          WorkshopTempData?
    activity_status    ActivityStatus
    scholar_attendance WorkshopAttendance[]
    speaker            Speaker[]
    slides             String?

    @@index([title, modality, activity_status, asociated_skill])
}

// This model is used to store the data that is not necesary to be stored in the database, but is necesary to be stored temporaly in the server
model WorkshopTempData {
    id               String   @id @default(nanoid())
    workshop         Workshop @relation(fields: [workshop_id], references: [id])
    workshop_id      String   @unique
    meeting_link     String[]
    meeting_id       String[]
    meeting_password String[]
}

//  Intermediate table to store the attendance of the scholars to the workshops
model WorkshopAttendance {
    id                             String                    @id @default(nanoid())
    scholar                        ScholarProgramInformation @relation(fields: [program_information_scholar_id], references: [id])
    program_information_scholar_id String
    workshop_id                    String
    workshop                       Workshop                  @relation(fields: [workshop_id], references: [id])
    attendance                     ScholarAttendance
    justification                  String?
    satisfaction_form_filled       Boolean?
    satisfaction_form              WorkshopSafisfactionForm?

    @@index([program_information_scholar_id])
    @@index([workshop_id])
}

model WorkshopSafisfactionForm {
    id                              String             @id @default(nanoid())
    suggestions                     String //Escribe algunas sugerencias que permitan mejorar el desarrollo de las actividades de formación.
    speaker_satisfaction            Float //Consideras que el desempeño del facilitador, en general, fue:
    speaker_strategies_satisfaction Float // Consideras que las estrategias aplicadas por el especialista facilitaron tu aprendizaje y el desarrollo de la competencia prevista.
    meeting_software_satisfaction   Float //El uso de la plataforma para videoconferencias utilizada fue:
    activity_satisfaction           Float //¿Cuál es tu nivel de satisfacción con el desarrollo de la actividad?
    activity_pourpose_satisfaction  Float //La actividad evidenció un propósito formativo de utilidad para tu desempeño personal y profesional.
    activity_duration               Float // 2. El tiempo programado para el desarrollo de la actividad de formación fue:
    activity_schedule               Float //El horario propuesto para la actividad fue:
    acivity_anticipation_time       Float // Recibiste la convocatoria para la actividad con suficiente anticipación:
    workshop_attendance             WorkshopAttendance @relation(fields: [workshop_attendance_id], references: [id])
    workshop_attendance_id          String             @unique
}
