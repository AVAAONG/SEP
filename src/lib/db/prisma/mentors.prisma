import { ScholarProgramInformation,  } from "users\scholar\scholar"

enum MentorProgramStatus {
    PENDING
    ACCEPTED
    NOT_ACCEPTED
    ACTIVE
    INACTIVE
}

model Mentor {
    id                   String              @id @default(nanoid())
    first_name           String
    last_name            String
    email                String              @unique
    dni                  String              @unique
    cell_phone           String
    created_at           DateTime            @default(now())
    updated_at           DateTime            @updatedAt
    birthdate            DateTime
    city_of_residence    String
    profession           String
    company              String
    company_position     String
    other_activities     String
    image                String
    hobbies              String
    instagram_profile    String
    linkedin_profile     String
    facebook_profile     String
    twitter_profile      String
    personal_qualities   String
    areas_of_interest    String
    areas_of_improvement String
    how_know_us          String
    motivation           String
    main_qualities       String
    curriculum           String
    status               MentorProgramStatus
    mentor_mentee        Mentor_mentee[]
}

model Mentee_mentor_activities {
    id              String        @id @default(nanoid())
    mentee_mentor   Mentor_mentee @relation(fields: [mentor_menteeId], references: [id])
    mentor_menteeId String
}

model Mentor_mentee {
    id                       String                     @id @default(nanoid())
    mentor_mentee_activities Mentee_mentor_activities[]
    Mentor                   Mentor?                    @relation(fields: [mentorId], references: [id])
    startDate                DateTime                   @default(now())
    endDate                  DateTime
    mentorId                 String?
}
